public class Main {
    public static void main(String[] args) {
        task1();
    }

    public static void task1() {
        //task1
        int[] array1 = new int[3];
        array1[0] = 1;
        array1[1] = 2;
        array1[2] = 3;

        double[] array2 = {1.570, 7.654, 9.986};
        boolean[] array3 = {true, true, false};

        //task2
        for (int i = 0; i < array1.length; i++) {
            System.out.print(array1[i]); //убрали ln из print, чтобы при перчати не переносить на новую строку
            if (i != array1.length - 1) { // если i НЕ равно длине массива минус 1, то
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }

        System.out.println(); //перенос на новую строку
        for (int i = 0; i < array2.length; i++) {
            System.out.print(array2[i]); //убрали ln из print, чтобы при перчати не переносить на новую строку
            if (i != array2.length - 1) { // если i НЕ равно длине массива минус 1, то
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }

        System.out.println(); //перенос на новую строку
        for (int i = 0; i < array3.length; i++) {
            System.out.print(array3[i]); //убрали ln из print, чтобы при перчати не переносить на новую строку
            if (i != array3.length - 1) { // если i НЕ равно длине массива минус 1, то
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }

        //ФИГУРНЫЕ СКОБКИ использовать только для циклов, условий и методов. Иначе можно заблокировать код
        //(не будет считываться то, что в фигурных скобках)

        //task3
        //распечатать все элементы всех трех массивов, но начинать нужно не с первого элемента массива, а с последнего.
        // Элементы должны быть распечатаны через запятую, при этом элементы одного массива располагаются на одной строчке,
        // а элементы другого массива – на другой. Запятая между последним элементом одного массива и первым элементом
        // следующего не нужна.
        System.out.println(); //перенос на новую строку
        System.out.println(); //перенос на новую строку
        for (int i = array1.length - 1; i >= 0; i--) { // старт с конца и до 0
            System.out.print(array1[i]);
            if (i != 0) { // если i НЕ равно 0
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }

        System.out.println(); //перенос на новую строку
        for (int i = array2.length - 1; i >= 0; i--) { // старт с конца и до 0
            System.out.print(array2[i]);
            if (i != 0) { // если i НЕ равно 0
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }

        System.out.println(); //перенос на новую строку
        for (int i = array3.length - 1; i >= 0; i--) { // старт с конца и до 0
            System.out.print(array3[i]);
            if (i != 0) { // если i НЕ равно 0
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }

        //task4
        //все нечетные числа в в первом массиве сделайте четными (нужно прибавить 1).
        System.out.println(); //перенос на новую строку
        System.out.println(); //перенос на новую строку
        for (int i = 0; i < array2.length; i++) {
            if (array1[i] % 2 == 1) { // если при делении на 2 остаток 1, а не 0 (нечетное число делится с остатком 1), то
                array1[i]++; //тогда прибавить к нему 1
            }
            System.out.print(array1[i]);
            if (i != array1.length - 1) { // если i НЕ равно длине массива минус 1, то
                System.out.print(", "); //печатать с пробелами и запятыми (если не последний элемент массива)
            }
        }
        //новая ветка
    }
}
//public static void task1alt(){
//альтернативный вариант решения задачи 1 первый блок
//int [] arrayAlt = new int [3];
//arrayAlt [0] = 1;
//arrayAlt [1] = 2;
//arrayAlt [2] = 3;
//for (int i = 0; i<arrayAlt.length; i++) {
//    arrayAlt[i] = i + 1;
// }
//}
